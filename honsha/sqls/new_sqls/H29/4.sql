-- SQL_CYCLE_BILLING_SUMMARY
INSERT INTO t_acceptance_tests ( payment_month ,supplier_code ,last_month_balance ,payment_amount ,sales_amount_count ,sales_amount ,sales_amount_tax ,material_supply_amount_count ,material_supply_amount ,material_supply_amount_tax ,billing_amount ,version_no ,upDATEd_at ,upDATEd_by ) SELECT * FROM ( SELECT ? AS payment_month ,z.supplier_code ,z.last_month_balance（price） ,z.payment_amount（price） ,z.当月売上高（枚数） ,z.当月売上高（price） ,z.当月売上高（消費税） ,z.材料支給高（枚数） ,z.材料支給高（price） ,z.材料支給高（消費税） ,(z.last_month_balance（price） - z.payment_amount（price）) + (z.当月売上高（price） + z.当月売上高（消費税）) - (z.材料支給高（price） + z.材料支給高（消費税）) AS 差引billing_amount ,1 AS version_no ,CURRENT_TIMESTAMP AS upDATEd_at ,? AS upDATEd_by FROM ( SELECT y.supplier_code ,SUM(y.last_month_balance（price）) AS last_month_balance（price） ,SUM(y.payment_amount（price）) AS payment_amount（price） ,SUM(y.当月売上高（枚数）) AS 当月売上高（枚数） ,SUM(y.当月売上高（price）) AS 当月売上高（price） ,CAST(ROUND(SUM(y.当月売上高（消費税）), 0) as BIGINT) AS 当月売上高（消費税） ,SUM(y.材料支給高（枚数）) + SUM(y.売上（枚数）) AS 材料支給高（枚数） ,SUM(y.材料支給高（price）) + SUM(y.売上（price）) AS 材料支給高（price） ,CAST(ROUND(SUM(y.材料支給高（消費税）) + SUM(y.売上（消費税）), 0) as BIGINT) AS 材料支給高（消費税） FROM ( SELECT x.supplier_code ,CASE WHEN x.区分 = 1 THEN x.price ELSE 0 END AS last_month_balance（price） ,CASE WHEN x.区分 = 2 THEN x.price ELSE 0 END AS payment_amount（price） ,CASE WHEN x.区分 = 3 THEN x.件数 ELSE 0 END AS 当月売上高（枚数） ,CASE WHEN x.区分 = 3 THEN x.price ELSE 0 END AS 当月売上高（price） ,CASE WHEN x.区分 = 4 THEN x.件数 ELSE 0 END AS 材料支給高（枚数） ,CASE WHEN x.区分 = 4 THEN x.price ELSE 0 END AS 材料支給高（price） ,CASE WHEN x.区分 = 5 THEN x.件数 ELSE 0 END AS 売上（枚数） ,CASE WHEN x.区分 = 5 THEN x.price ELSE 0 END AS 売上（price） ,CASE WHEN x.区分 = 3 THEN x.price * (CASE WHEN x.payment_month < '201910' THEN 0.08 ELSE 0.1 END) ELSE 0 END AS 当月売上高（消費税） ,CASE WHEN x.区分 = 4 THEN x.price * (CASE WHEN x.payment_month < '201910' THEN 0.08 ELSE 0.1 END) ELSE 0 END AS 材料支給高（消費税） ,CASE WHEN x.区分 = 5 THEN x.price * (CASE WHEN x.payment_month < '201910' THEN 0.08 ELSE 0.1 END) ELSE 0 END AS 売上（消費税） FROM ( SELECT A.supplier_code ,1 AS 区分 ,0 AS 件数 ,A.billing_amount AS price ,A.payment_month FROM t_acceptance_tests AS A WHERE A.payment_month = LEFT(TO_CHAR((CAST(? as DATE) + interval '-1 month') ,'YYYYMMDD'),6) UNION ALL SELECT B.supplier_code ,2 AS 区分 ,0 AS 件数 ,SUM(B.price) AS price ,B.payment_month FROM t_payments AS B WHERE B.payment_month = LEFT(TO_CHAR((CAST(? as DATE) + interval '-1 month') ,'YYYYMMDD'),6) GROUP BY B.supplier_code, B.payment_month UNION ALL SELECT C.supplier_code ,C.区分 ,SUM(C.件数) AS 件数 ,SUM(C.price) AS price ,C.payment_month FROM ( SELECT 3 AS 区分 ,c1.supplier_code ,CAST(COUNT(a1.placing_order_no) AS INT) AS 件数 ,SUM(a1.price) AS price ,TO_CHAR(a1.acceptance_DATE, 'YYYYMM') AS payment_month FROM t_process_acceptances AS a1 INNER JOIN t_placing_orders AS c1 ON c1.placing_order_no = a1.placing_order_no WHERE a1.acceptance_DATE BETWEEN CAST(? as DATE) AND (CAST(? as DATE) + interval '1 month' ) - interval '1 day' GROUP BY c1.supplier_code, TO_CHAR(a1.acceptance_DATE, 'YYYYMM') UNION ALL SELECT 3 AS 区分 ,a2.supplier_code ,CAST(COUNT(a2.supplier_code) AS INT) AS 件数 ,- SUM(a2.price) AS price ,TO_CHAR(a2.return_DATE, 'YYYYMM') AS payment_month FROM t_acceptance_returns AS a2 WHERE a2.return_DATE BETWEEN CAST(? as DATE) AND (CAST(? as DATE) + interval '1 month' ) - interval '1 day' GROUP BY a2.supplier_code, TO_CHAR(a2.return_DATE, 'YYYYMM') UNION ALL SELECT 3 AS 区分 ,a3.supplier_code AS supplier_code ,CAST(COUNT(a3.supplier_code) AS INT) AS 件数 ,SUM(a3.price) AS price ,a3.payment_month FROM ( SELECT supplier_code ,deal_DATE ,CASE WHEN purchase_type = '1' THEN price ELSE - price END AS price ,TO_CHAR(deal_DATE, 'YYYYMM') AS payment_month FROM t_purchases ) AS a3 WHERE a3.deal_DATE BETWEEN CAST(? as DATE) AND (CAST(? as DATE) + interval '1 month' ) - interval '1 day' GROUP BY a3.supplier_code, a3.payment_month UNION ALL SELECT 4 AS 区分 ,a4.supply_target_code AS supplier_code ,CAST(COUNT(a4.supply_target_code) AS INT) AS 件数 ,SUM(a4.supply_amount) AS price ,a4.payment_month FROM ( SELECT a4.supply_target_code ,a4.deal_DATE ,CASE WHEN a4.purchase_type = '1' AND a4.offset_method_type = '1' THEN a4.supply_amount WHEN a4.purchase_type = '1' AND a4.offset_method_type = '2' THEN c4.offset_amount ELSE - a4.supply_amount END AS supply_amount ,TO_CHAR(CASE WHEN a4.purchase_type = '1' AND a4.offset_method_type = '2' THEN c4.offset_DATE ELSE a4.deal_DATE END, 'YYYYMM') AS payment_month FROM t_purchases AS a4 LEFT OUTER JOIN t_purchase_offsets AS c4 ON c4.seq_no = a4.seq_no WHERE a4.purchase_category_type = '1' AND CASE WHEN a4.purchase_type = '1' AND a4.offset_method_type = '2' THEN c4.offset_DATE ELSE a4.deal_DATE + interval '1 month' END BETWEEN CAST(? as DATE) AND (CAST(? as DATE) + interval '1 month' ) - interval '1 day' ) AS a4 GROUP BY a4.supply_target_code, a4.payment_month UNION ALL SELECT 5 AS 区分 ,a5.deal_code AS supplier_code ,CAST(COUNT(a5.deal_code) AS INT) AS 件数 ,SUM(a5.price) AS price ,TO_CHAR(a5.sales_DATE, 'YYYYMM') AS payment_month FROM t_sales_options AS a5 WHERE a5.deal_type = '2' AND a5.sales_DATE BETWEEN CAST(? as DATE) AND (CAST(? as DATE) + interval '1 month' ) - interval '1 day' GROUP BY a5.deal_code, TO_CHAR(a5.sales_DATE, 'YYYYMM') ) AS C INNER JOIN m_suppliers AS D ON D.supplier_code = C.supplier_code AND D.acceptance_report_type = true GROUP BY C.supplier_code, C.区分, C.payment_month ) AS x ) AS y GROUP BY y.supplier_code ) AS z ) AS w WHERE w.差引billing_amount <> 0 OR w.当月売上高（price） <> 0 OR w.材料支給高（price） <> 0
