-- SQL_REPORT_42_COUNT_TEMPLATE
SELECT CAST(COUNT(A.supplier_code) AS INT) %s %s
-- SQL_REPORT_42_COMMON(%s1)
FROM ( SELECT x.supplier_code ,CAST(COUNT(x.supplier_code) AS INT) AS 件数 ,SUM(x.仕入price) AS 仕入price FROM ( SELECT b1.supplier_code ,a1.price AS 仕入price FROM t_process_acceptances AS a1 INNER JOIN t_placing_orders AS b1 ON b1.placing_order_no = a1.placing_order_no WHERE a1.acceptance_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) UNION ALL SELECT a2.supplier_code ,- a2.price AS 仕入price FROM t_acceptance_returns AS a2 WHERE a2.return_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) UNION ALL SELECT a3.supplier_code AS supplier_code ,CASE WHEN a3.purchase_type = '1' THEN a3.price ELSE - a3.price END AS 仕入price FROM t_purchases AS a3 WHERE a3.deal_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) UNION ALL SELECT a4.supply_target_code AS supplier_code ,CASE WHEN a4.purchase_type = '1' AND a4.offset_method_type = '1' THEN - a4.supply_amount WHEN a4.purchase_type = '1' AND a4.offset_method_type = '2' THEN - c4.offset_amount ELSE a4.supply_amount END AS 仕入price FROM t_purchases AS a4 LEFT OUTER JOIN t_purchase_offsets AS c4 ON c4.seq_no = a4.seq_no WHERE a4.purchase_category_type = '1' AND CASE WHEN a4.purchase_type = '1' AND a4.offset_method_type = '2' THEN c4.offset_DATE ELSE a4.deal_DATE + interval'1 month' END BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) UNION ALL SELECT a5.deal_code AS supplier_code ,- a5.price AS 仕入price FROM t_sales_options AS a5 WHERE a5.deal_type = '2' AND a5.sales_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) ) AS x GROUP BY x.supplier_code ) AS A LEFT OUTER JOIN m_suppliers AS B ON B.supplier_code = A.supplier_code
    -- SQL_REPORT_42_ORDERBY(%s2)
    ORDER BY COALESCE(B.sort_no,0), B.supplier_code


