-- SQL_REPORT_32_SELECT_TEMPLATE
SELECT x.customer_code ,COALESCE(y.customer_name,'') AS customer_name ,x.件数 ,x.売上price %s %s
-- SQL_REPORT_32_COMMON(%s1)
FROM ( SELECT A.customer_code ,CAST(COUNT(A.customer_code) AS INT) AS 件数 ,SUM(A.price) AS 売上price FROM ( SELECT b1.customer_code ,a1.price FROM t_sales AS a1 INNER JOIN t_incoming_orders AS b1 ON b1.management_no = a1.management_no AND b1.incoming_order_type IN ('2','3') AND NOT (b1.customer_code = '1' AND LEFT(b1.incoming_order_no,1) ~ '^[0-9]+$') WHERE a1.delivery_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) UNION ALL SELECT b2.customer_code ,a2.price FROM t_sales AS a2 INNER JOIN t_incoming_orders AS b2 ON b2.management_no = a2.management_no LEFT OUTER JOIN m_customers AS c2 ON c2.customer_code = b2.customer_code LEFT OUTER JOIN t_kogo AS d2 ON d2.issue_INT AUTO_INCREMENT_no = b2.incoming_order_barcode_no WHERE a2.delivery_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) AND b2.incoming_order_type IN ('2','3') AND b2.customer_code = '1' AND LEFT(b2.incoming_order_no,1) ~ '^[0-9]+$' AND ((b2.deadline >= '2018-01-01' AND COALESCE(d2.next_process_place_code,'') <> '') OR b2.deadline <= '2017-12-31') UNION ALL SELECT b3.customer_code ,a3.price FROM t_sales AS a3 INNER JOIN t_incoming_orders AS b3 ON b3.management_no = a3.management_no AND b3.incoming_order_type IN ('2','3') AND b3.customer_code = '1' AND LEFT(b3.incoming_order_no,1) ~ '^[0-9]+$' AND b3.deadline >= '2018-01-01' LEFT OUTER JOIN t_kogo AS c3 ON c3.issue_INT AUTO_INCREMENT_no = b3.incoming_order_barcode_no WHERE a3.delivery_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) AND COALESCE(c3.next_process_place_code,'') = '' UNION ALL SELECT a4.customer_code ,- a4.price AS price FROM t_sales_returns AS a4 LEFT OUTER JOIN m_parts AS b4 ON b4.part_no = a4.part_no WHERE a4.return_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) UNION ALL SELECT a5.deal_code AS customer_code ,a5.price FROM t_sales_options AS a5 WHERE a5.sales_DATE BETWEEN CAST(CASE WHEN ? = '' THEN '2000-01-01' ELSE ? END as DATE) AND CAST(CASE WHEN ? = '' THEN '9999-12-31' ELSE ? END as DATE) AND a5.deal_type = '1' ) AS A GROUP BY A.customer_code ) AS x LEFT OUTER JOIN m_customers AS y ON y.customer_code = x.customer_code
    -- SQL_REPORT_32_ORDERBY(%s2)
    ORDER BY COALESCE(y.sort_no,0), x.customer_code


