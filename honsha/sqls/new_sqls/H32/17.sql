-- SQL_GET_ORDER
SELECT a.management_no ,a.incoming_order_no ,a.branch_no ,a.customer_code ,COALESCE(b.customer_name,'') AS customer_name ,CASE WHEN a.customer_code = '1' THEN '1' ELSE '0' END as 得意先区分 ,CASE a.incoming_order_type WHEN '1' THEN '先行手配' WHEN '2' THEN '受注' WHEN '3' THEN '受注' WHEN '4' THEN '再納' ELSE '' END AS incoming_order_type ,a.part_no ,a.engineering_change_no ,a.part_name ,CASE WHEN i.part_no IS NULL THEN '' ELSE '管理図面' END AS 図面type ,a.customer_part_no ,a.incoming_order_DATE ,a.deadline ,CASE WHEN a.incoming_order_data_type = 'A' THEN COALESCE(c.sales_deadline,'') ELSE '' END AS sales_deadline ,a.incoming_order_quantity ,CASE WHEN a.incoming_order_type IN ('1', '4') THEN a.incoming_order_quantity - COALESCE(d.完了数,0) ELSE a.incoming_order_quantity - COALESCE(e.納quantity,0) END AS 受注残数 ,CASE WHEN a.incoming_order_type IN ('1', '4') /* 先行手配 */ THEN CASE WHEN g.management_no IS NULL /* 依頼無し */ THEN '' /* 依頼有り */ ELSE CASE WHEN g.test_type = false /* test無し */ THEN CASE g.delivery_form_type WHEN '11' THEN 'END' WHEN '12' THEN 'STP' WHEN '13' THEN 'ING' ELSE '' END /* test有り */ ELSE CASE g.test_result_type /* 未test */ WHEN '0' THEN '' /* 合格 */ WHEN '1' THEN CASE g.delivery_form_type WHEN '11' THEN 'END' WHEN '12' THEN 'STP' WHEN '13' THEN 'ING' ELSE '' END /* 不合格 */ WHEN '2' THEN '不合格' ELSE '' END END END /* 受注（計画無し）,受注（計画有り）,再納 */ ELSE CASE WHEN g.management_no IS NULL /* 依頼無し */ THEN '' /* 依頼有り */ ELSE CASE WHEN g.test_result_type = '2' /* 不合格 */ THEN '不合格' /* 不合格以外 */ ELSE CASE WHEN h.management_no IS NULL /* 売上無し */ THEN '' /* 売上有り */ ELSE CASE h.delivery_form_type WHEN '1' THEN '完納' WHEN '2' THEN '打切り' WHEN '3' THEN '分納' WHEN '4' THEN '過剰納入' ELSE '' END END END END END AS 納入形態 ,j.registration_DATE AS 回答メール送信日 ,COALESCE(k.stock_quantity,0) AS stock_quantity ,COALESCE(k.suspense_stock_quantity,0) AS suspense_stock_quantity ,COALESCE(k.stock_quantity,0) - COALESCE(k.ship_request_quantity,0) AS 有効stock_quantity ,a.manager_code ,COALESCE(l.employee_name,'') AS manager_name ,m.placing_order_DATE ,m.placing_order_quantity ,a.delivery_place_name FROM t_incoming_orders AS a LEFT OUTER JOIN m_customers AS b ON b.customer_code = a.customer_code LEFT OUTER JOIN t_kobai_juchu AS c ON c.report_no = a.incoming_order_barcode_no LEFT OUTER JOIN ( SELECT management_no, SUM(request_quantity) AS 完了数 FROM t_test_and_ship_requests WHERE test_type = false OR (test_type = true AND test_result_type = '1') /* test無し、合格 */ GROUP BY management_no ) AS d ON d.management_no = a.management_no LEFT OUTER JOIN ( SELECT management_no, SUM(request_quantity) AS 納quantity FROM t_sales GROUP BY management_no ) AS e ON e.management_no = a.management_no LEFT OUTER JOIN ( SELECT management_no, MAX(partial_delivery_no) AS partial_delivery_no FROM t_test_and_ship_requests GROUP BY management_no ) AS f ON f.management_no = a.management_no LEFT OUTER JOIN t_test_and_ship_requests AS g ON g.management_no = f.management_no AND g.partial_delivery_no = f.partial_delivery_no LEFT OUTER JOIN t_sales AS h ON h.management_no = g.management_no AND h.partial_delivery_no = g.partial_delivery_no LEFT OUTER JOIN ( SELECT DISTINCT part_no FROM t_drawings WHERE drawing_type = '1' ) AS i ON i.part_no = a.part_no LEFT OUTER JOIN ( SELECT management_no, MAX(registration_DATE) AS registration_DATE FROM t_deadline_response_mails GROUP BY management_no ) AS j ON j.management_no = a.management_no LEFT OUTER JOIN m_stocks AS k ON k.part_no = a.part_no AND k.engineering_change_no = a.engineering_change_no LEFT OUTER JOIN m_employees AS l ON l.employee_code = a.manager_code LEFT OUTER JOIN ( SELECT DISTINCT management_no, placing_order_DATE, placing_order_quantity FROM t_placing_orders ) AS m ON m.management_no = a.management_no WHERE a.management_no = CAST(? as INT)


