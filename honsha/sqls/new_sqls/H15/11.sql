-- SQL_REPORT_SAISYUTSURYOKU
SELECT a.management_no,c.supplier_code,COALESCE(d.supplier_name,'') AS supplier_name,a.placing_order_DATE,c.deadline,e.part_no,e.engineering_change_no,e.part_name,e.incoming_order_no,e.branch_no,c.process_code,COALESCE(f.process_name,'') AS process_name,COALESCE(h.supplier_name,'') AS 前工程supplier_name,g.deadline AS 前工程deadline,CASE WHEN i.supplier_code IS NULL THEN '古河（本社）' ELSE COALESCE(j.supplier_name,'') END AS 次工程supplier_name,a.placing_order_no,b.production_quantity AS placing_order_quantity,e.unit,CASE WHEN c.manufacture_cost_type = true OR c.material_cost_type = true THEN 0.00 ELSE c.manufacture_cost + c.material_cost END AS 発注unit_price ,CASE WHEN c.manufacture_cost_type = true OR c.material_cost_type = true THEN 0 ELSE CAST(trunc((c.manufacture_cost + c.material_cost) * b.production_quantity ,0) as BIGINT) END AS 発注price ,e.placing_order_remarks_1,e.placing_order_remarks_2,COALESCE(k.employee_name,'') AS manager_name,CASE WHEN l.part_no IS NULL THEN '0' ELSE '1' END AS 管理マーク,CASE WHEN e.incoming_order_type <> '4' THEN '0' ELSE '1' END AS 再納マーク,CASE e.redelivery_type WHEN '1' THEN '不合格選別依頼' WHEN '2' THEN '不合格再処理' WHEN '3' THEN '不合格再製造' ELSE '' END AS 再納マーク種類 FROM t_placing_orders AS a INNER JOIN t_production_plans AS b ON b.management_no = a.management_no INNER JOIN t_production_plan_details AS c ON c.management_no = a.management_no AND c.process_sort_no = a.process_sort_no LEFT OUTER JOIN m_suppliers AS d ON d.supplier_code = c.supplier_code INNER JOIN t_incoming_orders AS e ON e.management_no = a.management_no LEFT OUTER JOIN m_processes AS f ON f.process_code = c.process_code LEFT OUTER JOIN t_production_plan_details AS g ON g.management_no = a.management_no AND g.process_sort_no = (a.process_sort_no - 1) LEFT OUTER JOIN m_suppliers AS h ON h.supplier_code = g.supplier_code LEFT OUTER JOIN t_production_plan_details AS i ON i.management_no = a.management_no AND i.process_sort_no = (a.process_sort_no + 1) LEFT OUTER JOIN m_suppliers AS j ON j.supplier_code = i.supplier_code LEFT OUTER JOIN m_employees AS k ON k.employee_code = e.manager_code LEFT OUTER JOIN ( SELECT DISTINCT part_no FROM t_drawings WHERE drawing_type = '1' ) AS l ON l.part_no = e.part_no WHERE a.management_no = CAST(? AS INT) AND a.process_sort_no = CAST(? AS INT) ORDER BY a.management_no, a.process_sort_no
